---
source: examples/ts-blank-space/src/main.rs
description: script compiled with ts-blank-space
expression: js
---
import ts from "npm:typescript";
import {
  createDefaultMapFromNodeModules,
  createSystem,
  createVirtualCompilerHost,
} from "npm:@typescript/vfs";

export function createProgram(root                        ) {
  const options                     = {
    strict: true,
    noEmit: true,
    lib: [ts.getDefaultLibFileName({ target: ts.ScriptTarget.ESNext })],
    target: ts.ScriptTarget.ESNext,
    module: ts.ModuleKind.ESNext,
    moduleResolution: ts.ModuleResolutionKind.Bundler,
    moduleDetection: ts.ModuleDetectionKind.Force,
  };

  let files                     ;

  if (globalThis.TYPESCRIPT_LIB) {
    files = new Map();
    for (const [lib, dts] of Object.entries(globalThis.TYPESCRIPT_LIB)) {
      files.set(`/${lib}`, dts);
    }
  } else {
    files = createDefaultMapFromNodeModules(options, ts);
  }

  for (const [name, src] of Object.entries(root)) {
    files.set(name, src);
  }

  const { compilerHost } = createVirtualCompilerHost(createSystem(files), options, ts);

  const program = ts.createProgram(Object.keys(root), options, compilerHost);

  return {
    printDiagnostics: (colored = true) => {
      const diagnostics = [
        ...program.getGlobalDiagnostics(),
        ...program.getSyntacticDiagnostics(),
        ...program.getDeclarationDiagnostics(),
        ...program.getSemanticDiagnostics(),
      ];
      if (colored) {
        return ts.formatDiagnosticsWithColorAndContext(diagnostics, compilerHost);
      } else {
        return ts.formatDiagnostics(diagnostics, compilerHost);
      }
    },
  };
}

;
